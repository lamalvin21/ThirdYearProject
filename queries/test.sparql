PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX fx:   <http://sparql.xyz/facade-x/ns/>
PREFIX xyz:  <http://sparql.xyz/facade-x/data/>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX apf: <http://jena.apache.org/ARQ/property#>
PREFIX organ: <http://w3id.org/polifonia/resource/organs/>
PREFIX oont: <http://w3id.org/polifonia/ontology/organs/>

CONSTRUCT
  {
	?organ a oont:Organ ;
		oont:builder ?builder ;
		oont:consolelocation ?originallocation ;
		oont:dateOfBirth ?dateOfBirth ;

		oont:particularities ?particularity ;
		oont:history ?history ;
		oont:creator ?creator ;
		oont:moreInformation ?moreInformation ;
  }
WHERE
  { SERVICE <x-sparql-anything:file:./output/history_base.json>
    { 
		BIND(CONCAT("$..", ?_organ, "..builder") AS ?organBuilder) .
		BIND(CONCAT("$..", ?_organ, "..originallocation") AS ?organOriginalLocation) .
		BIND(CONCAT("$..", ?_organ, "..year") AS ?organDob) .

		fx:properties
				fx:json.path.1 ?organBuilder ;
				fx:json.path.2 "$..Part01_001MIDDE..originallocation"; #doesnt work for the ?organOriginalLocation
				fx:json.path.3 "$..Part01_001MIDDE..year" ; #doesnt work for ?organDob
				. 
				
			[] a fx:root; 
			rdf:_1 ?builder ;
			rdf:_2 ?originallocation ;
			rdf:_3 ?dateOfBirth ; 
			.

		BIND (?_organ AS ?organ) .
	} SERVICE <x-sparql-anything:file:./output/texts_bijzonderheden.json> {
		
		BIND(CONCAT("$.", ?_organ) AS ?organParticularity) .

		fx:properties
				fx:json.path.1 ?organParticularity;.

		[] a fx:root; 
			rdf:_1 ?particularity ;
	} SERVICE <x-sparql-anything:file:./output/texts_hist.json> {
		BIND(CONCAT("$.", ?_organ) AS ?organHistory) .

		fx:properties
				fx:json.path.1 ?organHistory;.

		[] a fx:root; 
			rdf:_1 ?history ;
	} SERVICE <x-sparql-anything:file:./output/texts_kunst.json> {
		BIND(CONCAT("$.", ?_organ) AS ?organCreator) .

		fx:properties
				fx:json.path.1 ?organCreator;.

		[] a fx:root; 
			rdf:_1 ?creator ;
	} SERVICE <x-sparql-anything:file:./output/texts_lit.json> {
		BIND(CONCAT("$.", ?_organ) AS ?organMoreInformation) .

		fx:properties
				fx:json.path.1 ?organMoreInformation;.

		[] a fx:root; 
			rdf:_1 ?moreInformation ;
	}
  } 

# CONSTRUCT
#   {
# 	?organ a oont:Organ ;
# 		oont:builder ?builder ;
# 		oont:consolelocation ?originallocation ;
# 		oont:updatedAt ?change ;
# 		oont:Disposition ?disposition  .

# 	?disposition xyz:divisionname ?divisionname . # xyz
# 	?disposition oont:partition ?partition .
# 	?disposition oont:AdditionalSpecification ?specification .

# 	?change oont:date ?datechange .
# 	?change oont:AdditionalSpecification ?description . 
# 	?change oont:Builder ?builder .
#   }
# WHERE
#   { 
# 	SERVICE <x-sparql-anything:file:./output/history_base.json>
#     { 
# 		BIND(CONCAT("$.", ?_organ, ".builder") AS ?organBuilder) .

# 		fx:properties
# 			fx:json.path.1 ?organBuilder ;
# 			fx:json.path.2 "$.Part01_001MIDDE.originallocation" ; #doesnt work for the ?organOriginalLocation
# 			. 
				
# 		[] a fx:root; 
# 			rdf:_1 ?builder ;
# 			rdf:_2 ?originallocation ;
# 			.

# 		BIND (?_organ AS ?organ) .
# 	} 
# 	SERVICE <x-sparql-anything:file:./output/dispositions.json> 
# 	{
# 		fx:properties
# 			fx:json.path.1 "$.Part01_001MIDDE.dispositions[?(@.current==true)].description";
# 			fx:json.path.2 "$.Part01_001MIDDE.dispositions[?(@.current==true)].disposition[0].division_name";
# 			fx:json.path.3 "$.Part01_001MIDDE.dispositions[?(@.current==true)].disposition[0].stoplist[0].partition";
# 			fx:json.path.4 "$.Part01_001MIDDE.dispositions[?(@.current==true)].disposition[0].stoplist[0].spec";
# 			.

# 		[] a fx:root; 
# 			rdf:_1 ?disposition ;
# 			rdf:_2 ?divisionname ;
# 			rdf:_3 ?partition ;
# 			rdf:_4 ?specification ;
# 	}
# 	SERVICE <x-sparql-anything:file:./output/history_projects.json>  
# 	{
# 		fx:properties
# 			fx:json.path.1 "$.Part01_001MIDDE[0].changes[0]";
# 			fx:json.path.2 "$.Part01_001MIDDE[0].date";	
# 			fx:json.path.3 "$.Part01_001MIDDE[0].description";	
# 			fx:json.path.4 "$.Part01_001MIDDE[0].name";	
# 			.

# 		[] a fx:root; 
# 			rdf:_1 ?change ;
# 			rdf:_2 ?datechange ;	
# 			rdf:_3 ?description ;
# 			rdf:_4 ?builder ;	
# 	}
#   }

# THIS WORKS!
# CONSTRUCT
#   {
# 	?organ a oont:Organ ;
# 		oont:builder ?builder ;
# 		oont:consolelocation ?originallocation ;
#   }
# WHERE
#   { SERVICE <x-sparql-anything:file:./output/history_base.json>
#     { 
# 		BIND(CONCAT("$.", ?_organ, ".builder") AS ?organBuilder) .

# 		fx:properties
# 			fx:json.path.1 ?organBuilder ;
# 				. 
				
# 			[] a fx:root; 
# 			rdf:_1 ?builder ;
# 			.

# 		BIND (?_organ AS ?organ) .
# 	} SERVICE <x-sparql-anything:file:./output/history_base.json> {
# 		BIND(CONCAT("$.", ?_organ, ".originallocation") AS ?organOriginalLocation) .

# 			fx:properties
# 				fx:json.path.1 ?organOriginalLocation ;
# 				. 
				
# 			[] a fx:root; 
# 			rdf:_1 ?originallocation ;
# 			.
# 	}
#   }

# CONSTRUCT
#  {
# 	?organ a oont:Organ;
# 		# oont:consoleDescription ?disposition;
# 		oont:category ?current ;

# 	# ?s ?p ?o
#  } WHERE 
#  {
# 	SERVICE <x-sparql-anything:file:./output/dispositions.json>
# 	{
# 		BIND(IRI(CONCAT(STR(xyz:),?_organ)) AS ?organ_slot)
			
# 		?root a fx:root ;
# 			?organ_slot ?organ .

# 		?organ xyz:dispositions [?slot [xyz:current [?slot ?current]]] ;
# 			# xyz:current ?current .

# 		# ?s ?p ?o
# 	}
#  }

# CONSTRUCT
#   {
# 	?organ a oont:Organ;
# 		oont:builder ?builder ;
# 		oont:consolelocation ?originallocation ;
# 		oont:dateOfBirth ?dateOfBirth ;
# 		oont:monument ?monument ;
# 		oont:monumentNumber ?monumentNumber ;
# 		# ?s ?p ?o ;
#   }
# WHERE
#   { 
# 	SERVICE <x-sparql-anything:file:./output/history_base.json>
#     { 
# 		BIND(IRI(CONCAT(STR(xyz:),?_organ)) AS ?organ_slot)
# 		?root a fx:root ;
# 				?organ_slot ?organ .

# 		?organ xyz:builder ?builder ; 
# 		xyz:originallocation ?originallocation ;
# 		xyz:year ?dateOfBirth ;

# 		SERVICE <x-sparql-anything:file:./output/base.json>
# 		{ 
# 			BIND(IRI(CONCAT(STR(xyz:),?_organ)) AS ?organ_slot)

# 			?root a fx:root ;
# 				?organ_slot ?organ .
			
# 				?organ xyz:building ?monument ; 
# 				xyz:monumentnumber ?monumentNumber ;
# 		} 
# 	} 
#   }


# PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
# PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
# PREFIX fx:   <http://sparql.xyz/facade-x/ns/>
# PREFIX xyz:  <http://sparql.xyz/facade-x/data/>
# PREFIX owl: <http://www.w3.org/2002/07/owl#>
# PREFIX apf: <http://jena.apache.org/ARQ/property#>
# PREFIX organ: <http://w3id.org/polifonia/resource/organs/>
# PREFIX oont: <http://w3id.org/polifonia/ontology/organs/>

# CONSTRUCT
#   {
# 	?organ a oont:Organ ;
# 		oont:builder ?builder ;
# 		oont:consolelocation ?originallocation ;
# 		oont:dateOfBirth ?dateOfBirth ;
#   }
# WHERE
#   { SERVICE <x-sparql-anything:file:./output/history_base.json>
#     { 
# 		BIND(CONCAT("$..", ?_organ, "..builder") AS ?organBuilder) .
# 		BIND(CONCAT("$..", ?_organ, "..originallocation") AS ?organOriginalLocation) .
# 		BIND(CONCAT("$..", ?_organ, "..year") AS ?organDob) .

# 		fx:properties
# 				fx:json.path.1 ?organBuilder ;
# 				fx:json.path.2 "$..Part01_001MIDDE..originallocation"; #doesnt work for the ?organOriginalLocation
# 				fx:json.path.3 "$..Part01_001MIDDE..year" ; #doesnt work for ?organDob
# 				. 
				
# 			[] a fx:root; 
# 			rdf:_1 ?builder ;
# 			rdf:_2 ?originallocation ;
# 			rdf:_3 ?dateOfBirth ; 
# 			.

# 		BIND (?_organ AS ?organ) .
# 	} 
#   }